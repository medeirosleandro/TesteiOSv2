//
//  UserLoginViewController.swift
//  BankOfEveris
//
//  Created by Leandro Roberto Medeiros on 12/04/19.
//  Copyright (c) 2019 Leandro Roberto Medeiros. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol UserLoginDisplayLogic: class {
    func success(userData: LoginResponse) -> Void
    func failure(alertController: UIAlertController)->Void
}

class UserLoginViewController: UIViewController, UserLoginDisplayLogic {
    @IBOutlet weak var textFieldUser: UITextField!
    @IBOutlet weak var textFieldPassword: UITextField!
    @IBOutlet weak var buttonLogin: UIButton!
    
    
    var userAccount: LoginResponse.UserAccount?
    
    var interactor: UserLoginBusinessLogic?
    var router: (NSObjectProtocol & UserLoginRoutingLogic & UserLoginDataPassing)?
    
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?){
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder){
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    func setup(){
        let viewController = self
        let interactor = UserLoginInteractor()
        let presenter = UserLoginPresenter()
        let router = UserLoginRouter()
        
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad(){
        super.viewDidLoad()
        setup()
        setupLayout()
    }
    
    // MARK: Do something
    
    //@IBOutlet weak var nameTextField: UITextField!
    @IBAction func actionLoginUser(_ sender: Any) {
        if let userValue = self.textFieldUser.text, let userPassword = self.textFieldPassword.text {
            interactor?.validateLoginFields(user: userValue, password: userPassword)
        }
        
    }
    
    func success(userData: LoginResponse) {      
        self.performSegue(withIdentifier: "segueUserExtractViewController", sender: userData)
        
    }
    
    func failure(alertController: UIAlertController) {
        self.present(alertController, animated: true, completion: nil)
    }
    
    func clearTextFields(){
        self.textFieldUser.text?.removeAll()
        self.textFieldUser.text?.removeAll()
    }
    
    func setupLayout (){
        
        buttonLogin.layer.cornerRadius = 4
        buttonLogin.layer.shadowColor = #colorLiteral(red: 0.231372549, green: 0.2823529412, blue: 0.9333333333, alpha: 1)
        buttonLogin.layer.shadowOffset = CGSize(width: 0, height: 3)
        buttonLogin.layer.shadowRadius = 4
        buttonLogin.layer.shadowOpacity = 0.5
    }
}
